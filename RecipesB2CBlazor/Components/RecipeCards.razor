@inject IRecipesService RecipesService
@inject IUsersService UsersService
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler

@if (RecipesList is null)
{
    <div class="row">
        <div class="mt-5 text-xl text-center"><i class="fa fa-refresh"></i></div>
    </div>
}
else
{
    <div class="row mb-3 mx-lg-4">
        @foreach (var r in RecipesList)
        {
            <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-3 mt-5 d-flex align-items-stretch justify-content-sm-center">
                <div class="card ingredient-display">
                    <img src="@r.ImageUrl" class="card-img-top card-sized-image" alt="Dish Image">
                    <div class="card-body card-bg">
                        <h5 class="card-title text-center">@r.Name</h5>
                        <p class="text-sm card-text">@r.Description</p>
                    </div>
                    <div class="card-footer card-footer-bg">
                        <button class="btn btn-custom-primary mx-1 border-1 border-black" @onclick="() => RecipeModal.Open(r)">View Recipe</button>
                        <AuthorizeView>
                            <Authorized>
                                @if (r.IsFavorited)
                                {
                                    <button @onclick="(() => DeleteFavoriteRecipe(r.Id))" class="btn btn-custom-primary mx-1">
                                        <i class="fa-solid fa-heart fa-lg" style="color: black;"></i>
                                    </button>

                                }
                                else
                                {
                                    <button @onclick="(() => AddFavoriteRecipe(r.Id))" class="btn btn-custom-primary mx-1">
                                        <i class="fa-regular fa-heart fa-lg" style="color: black;"></i>
                                    </button>

                                }
                            </Authorized>
                            <NotAuthorized>
                                <a href="MicrosoftIdentity/Account/SignIn" class="btn btn-custom-primary mx-1">
                                    <i class="@((r.IsFavorited ? "fa-solid fa-heart" : "fa-regular fa-heart")) fa-lg" style="color: black;"></i>
                                </a>
                            </NotAuthorized>
                        </AuthorizeView>
                    </div>
                </div>
            </div>
        }
    </div>
    <RecipeModal @ref="RecipeModal"></RecipeModal>
}

@code {
    [Parameter]
    public List<Recipe>? RecipesList { get; set; }
    private RecipeModal RecipeModal { get; set; }
    private Recipe? SelectedRecipe { get; set; }


    private async Task DeleteFavoriteRecipe(int id)
    {
        try
        {
            await UsersService.DeleteUserFavoriteAsync(id);
        }
        catch(Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
        

    }
    private async Task AddFavoriteRecipe(int id)
    {
        try
        {
            await UsersService.AddUserFavoriteAsync(id);
        }
        catch (Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
    }
}
