@inject IRecipesService recipesService
@inject IJSRuntime JSRuntime
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler

@if (RecipesList is null)
{
    <div class="row justify-content-center">
        <div class="text-xxl">Loading...</div>
    </div>
    
}
else
{
    <div class="row justify-content-center pb-2">
        @foreach (var r in RecipesList)
        {
            <div class="col-sm-12 col-md-6 col-lg-6 col-xl-4 my-3">
                <div @onclick="(() => ShowRecipe(r.Id))"
                     class="card custom-primary-color text-center border-2 border-dark shadow-lg px-1 mx-3 h-100 card-pop">
                    <div class=" fw-bold pt-2">@r.Name</div>
                    <img src="@r.ImagePath" class="resized-image mx-auto d-block rounded-3 my-2" alt="Dish Image">
                    <p class="small"><em>@r.Description</em></p>
                </div>
            </div>
        }
    </div>

    @if (ShowingRecipe)
    {
        <ViewRecipe RecipeId="@SelectedRecipeId" />
        <div class="d-flex mb-5 justify-content-center">
            <button @onclick="() => ShowingRecipe = false" class="btn btn-outline-danger col-4 my-3">Hide</button>
        </div>
    }
}

@code {
    [Parameter]
    public List<RecipeModel>? RecipesList { get; set; }
    private int SelectedRecipeId { get; set; }
    private bool ShowingRecipe { get; set; } = false;

    private async Task ShowRecipe(int recipeId)
    {
        SelectedRecipeId = recipeId;
        ShowingRecipe = !ShowingRecipe;

        await Task.Delay(100);
        await JSRuntime.InvokeVoidAsync("scrollToElement", "viewrecipe");
    }
}
