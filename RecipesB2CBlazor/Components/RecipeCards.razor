@inject IRecipesService RecipesService
@inject IUsersService UsersService
@inject IJSRuntime JSRuntime
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler

@if (RecipesList is null)
{
    <div class="row">
        <div class="mt-5 text-xl text-center"><i class="fa fa-refresh"></i></div>
    </div>
}
else
{
    <div class="row mb-3 mx-lg-4">
        @foreach (var r in RecipesList)
        {
            <div class="col-sm-12 col-md-6 col-lg-6 col-xl-6 col-xxl-3 mt-5 d-flex align-items-stretch justify-content-sm-center">
                <div class="card ingredient-display">
                    <img src="@r.ImageUrl" class="card-img-top card-sized-image" alt="Dish Image">
                    <div class="card-body card-bg">
                        <h5 class="card-title text-center">@r.Name</h5>
                        <p class="text-sm card-text">@r.Description</p>
                    </div>
                    <div class="card-footer card-footer-bg">
                        <button @onclick="(() => ShowRecipe(r.Id))" class="btn btn-custom-primary">View Full Recipe</button>
                        @foreach(var uf in UserFavorites)
                        {
                            @if (r.Id == uf)
                            {
                                <button @onclick="(() => DeleteFavoriteRecipe(r.Id))" class="btn btn-custom-primary">
                                </button>
                                <i class="fa-solid fa-heart fa-lg" style="color: black;"></i>
                            }
                            else
                            {
                                <button @onclick="(() => AddFavoriteRecipe(r.Id))" class="btn btn-custom-primary">
                                </button>
                                <i class="fa-regular fa-heart fa-lg" style="color: black;"></i>
                            }
                            
                        }
                    </div>
                </div>
            </div>
        }
    </div>
    
    @if (ShowingRecipe)
    {
        <ViewRecipe RecipeId="@SelectedRecipeId" />
        <div class="text-center mb-5">
            <button @onclick="() => ShowingRecipe = false" class="btn btn-outline-danger col-4 shadow-lg">Hide</button>
        </div>
    }
}

@code {
    [Parameter]
    public List<Recipe>? RecipesList { get; set; }
    [Parameter]
    public List<int> UserFavorites { get; set; } = new List<int>();
    private int SelectedRecipeId { get; set; }
    private bool ShowingRecipe { get; set; } = false;


    private async Task ShowRecipe(int recipeId)
    {
        SelectedRecipeId = recipeId;
        ShowingRecipe = !ShowingRecipe;

        await Task.Delay(500);
        await JSRuntime.InvokeVoidAsync("scrollToElement", "viewrecipe");
    }

    private async Task DeleteFavoriteRecipe(int recipeId)
    {
        await UsersService.DeleteUserFavoriteAsync(recipeId);

    }
    private async Task AddFavoriteRecipe( int recipeId)
    {
        await UsersService.AddUserFavoriteAsync(recipeId);

    }
}
