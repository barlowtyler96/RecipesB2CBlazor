@inject IRecipesService recipesService
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler


@if (recipe is null)
{
    <div class="text-xxl text-center">Loading...</div>
}
else if (recipe.RecipeId == RecipeId)
{
    <div class="row bg-custom-primary ingredient-display view-recipe-card my-5 pb-5 mx-1" id="viewrecipe">
        <div class="col-12 text-xl fw-bold text-center mt-4">
            @recipe.Name
        </div>
        <div class="offset-lg-1 col-lg-5 mt-5 text-center">
            @recipe.Instructions <br>
            <img class="view-recipe-image mt-4 px-md-5" src="@recipe.ImageUrl">
        </div>
        <div class="offset-lg-3 col-lg-3 col-sm-12 mt-5">
            <ul class="list-unstyled">
                @foreach (var i in recipe.RecipeIngredients)
                {
                    <li class="small m-2 ingredient-display bg-light m-3 p-2">
                        <i class="fa-solid fa-wheat-awn"></i> &nbsp; @i.Amount @i.Unit @i.IngredientName
                    </li>
                }
            </ul>
        </div>
    </div>
}


@code {
    private RecipeModel? recipe;
    [Parameter]
    public int RecipeId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            recipe = await recipesService.GetAsync(RecipeId);
        }
        catch (Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
    }
}
