@using RecipesB2CBlazor.Helpers;
@inject IRecipesService _recipesService
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler

<div class="row justify-content-center pt-5">
    <div class="col-md-6 col-sm-12">
        <div class="input-group mb-3">
            <input type="text" class="form-control" placeholder="Search recipes" aria-label="Search keyword" aria-describedby="search-button" @bind="@keyword">
            <button class="btn btn-primary" type="button" id="search-button" @onclick="SearchForKeyword">Search</button>
        </div>
    </div>
</div>

@if (recipesResponse.Data is not null)
{
    <RecipeCards RecipesList="@recipesResponse.Data" />
}
@if (recipesResponse.Data is not null)
{
    <div class="row py-3 text-center">
        <Pagination 
            CurrentPage="@recipesResponse.CurrentPageNumber" 
            TotalItems="@recipesResponse.TotalCount" 
            ItemsPerPage="@recipesResponse.PageSize" 
            OnPageChanged="HandlePageChanged">
        </Pagination>
    </div>
}

@code {
    private string? keyword { get; set; }
    private RecipesResponse recipesResponse = new RecipesResponse();

    private async Task SearchForKeyword()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(keyword))
            {
                return;
            }
            recipesResponse = await _recipesService.GetByKeyword(keyword, recipesResponse.CurrentPageNumber, recipesResponse.PageSize);
        }
        catch (Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
    }

    private async Task HandlePageChanged(int newPage)
    {
        try
        {
            recipesResponse = await _recipesService.GetByKeyword(keyword!, newPage, recipesResponse.PageSize);
        }
        catch (Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
    }
}
