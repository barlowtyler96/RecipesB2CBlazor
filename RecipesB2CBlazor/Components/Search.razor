@using RecipesB2CBlazor.Helpers;
@inject IRecipesService recipesService
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler

<div class="row justify-content-center">
    <div class="col-md-6 col-sm-12">
        <div class="input-group mb-3">
            <input type="text" class="form-control" placeholder="Search keyword" aria-label="Search keyword" aria-describedby="search-button" @bind="@keyword">
            <button class="btn btn-primary" type="button" id="search-button" @onclick="SearchForKeyword">Search</button>
        </div>
    </div>
</div>

@if (returnedRecipes is not null)
{
    <RecipeCards RecipesList="@returnedRecipes" />
}
@if (returnedRecipes is not null)
{
    <div class="row py-3 text-center">
        <Pagination CurrentPage="@recipesResponse.CurrentPageNumber" TotalItems="@recipesResponse.TotalCount" ItemsPerPage="@recipesResponse.PageSize" OnPageChanged="HandlePageChanged"></Pagination>
    </div>
    
}


@code {
    private string? keyword { get; set; }
    private List<RecipeModel>? returnedRecipes;
    private RecipesResponse recipesResponse = new RecipesResponse();

    private async Task SearchForKeyword()
    {
        try
        {
            recipesResponse = await recipesService.GetByKeyword(keyword!, recipesResponse.CurrentPageNumber, recipesResponse.PageSize);
            returnedRecipes = recipesResponse.Data;
        }
        catch (Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
    }

    private async Task HandlePageChanged(int newPage)
    {
        try
        {
            recipesResponse = await recipesService.GetByKeyword(keyword!, newPage, recipesResponse.PageSize);
            returnedRecipes = recipesResponse.Data;
        }
        catch (Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
    }
}
