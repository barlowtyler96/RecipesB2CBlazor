@page "/submit"
@attribute [Authorize]
@using System.Net.Http.Json
@using System.Net.Http.Headers
@using Microsoft.Identity.Web
@using RecipesB2CBlazor.Services;
@inject IRecipesService recipesService
@inject ITokenAcquisition tokenAqcuisition
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler
<PageTitle>Submit</PageTitle>
<div class="container-fluid jumbotron-bg-img">
    <div class="row align-items-center h-100 text-center">
        <div class="col-6 mx-auto">
            <div class="card h-100 justify-content-center">
                <h1 class="fw-bold text-center m-3">
                    Submit a Recipe 
                </h1>
            </div>
        </div>
    </div>

    <EditForm Model="recipeDto" OnValidSubmit="SubmitRecipe">
        <DataAnnotationsValidator />
        <div class="row">
            <div class="col-md-3">
                <label>Recipe Name:</label>
                <InputText @bind-Value="recipeDto.Name" class="form-control" />
                <ValidationMessage For="@(() => recipeDto.Name)" />
            </div>
            <div class="col-md-9">
                <label>Recipe Description:</label>
                <InputText @bind-Value="recipeDto.Description" class="form-control" />
                <ValidationMessage For="@(() => recipeDto.Description)" />
            </div>
            <div class="">
                <label>Recipe Instructions:</label>
                <InputText @bind-Value="recipeDto.Instructions" class="form-control" />
                <ValidationMessage For="@(() => recipeDto.Instructions)" />
            </div>
            <div class="">
                <labe>Recipe Image (Optional)</labe>
                <InputFile OnChange="HandleFileChange" class="form-control" />
                <div class="form-text">Upload an image for the recipe (optional).</div>
            </div>
        </div>

        <h4>Recipe Ingredients</h4>
        <div class="row">
            @foreach (var recipeIngredient in recipeDto.RecipeIngredients)
            {
                <div class="col-md-4">
                    <label>Amount:</label>
                    <InputNumber @bind-Value="recipeIngredient.Amount" class="form-control" />
                </div>
                <div class="col-md-4">
                    <label>Unit:</label>
                    <InputText @bind-Value="recipeIngredient.Unit" class="form-control" />
                </div>
                <div class="col-md-4">
                    <label>Ingredient:</label>
                    <InputText @bind-Value="recipeIngredient.IngredientName" class="form-control" />
                </div>
            }
        </div>
        

        <button type="button" class="btn btn-success" @onclick="AddRecipeIngredient"><i class="fa-solid fa-plus"></i> Add an Ingredient</button>

        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>

    <div class="row mt-2">
        @if (isSuccessStatusCode && hasSubmitted == true)
        {
            <div class="alert alert-success">Your recipe was submitted. It will be reviewed before being added to the site.</div>
        }
        else if (!isSuccessStatusCode && hasSubmitted == true)
        {
            <div class="alert alert-danger">There was an error. If the issue persists, please email support at tybardesigns@gmail.com</div>
        }
    </div>
</div>




@code {
    private RecipeModel recipeDto = new RecipeModel();
    private bool isSuccessStatusCode;
    private bool hasSubmitted = false;

    private async Task SubmitRecipe()
    {
        try
        {
            hasSubmitted = false; // Clear previous submission status
            isSuccessStatusCode = await recipesService.AddAsync(recipeDto);
            hasSubmitted = true;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
    }

    private async Task HandleFileChange(InputFileChangeEventArgs e)
    {
        var imageFile = e.File;

        if (imageFile != null)
        {
            string fileName = Guid.NewGuid().ToString() + Path.GetExtension(imageFile.Name);

            string relativeImagePath = $"RecipeImages/DishImages/{fileName}";
            recipeDto.ImagePath = relativeImagePath;
            string absoluteImagePath = Path.Combine("wwwroot", relativeImagePath);

            using (var stream = new FileStream(absoluteImagePath, FileMode.Create))
            {
                await imageFile.OpenReadStream().CopyToAsync(stream);
            }
        }
    }

    private void AddRecipeIngredient()
    {
        recipeDto.RecipeIngredients.Add(new RecipeIngredient());
    }
}